@use '../styles/themes/theme-variables' as *;

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  overflow: hidden;
  backdrop-filter: blur(10px);
}

.dialog {
  width: 90vw; /* Use 90% of viewport width */
  height: calc(100vh - 8rem);
  // max-width: 1800px; /* Increased max width */
  position: relative;
  overflow: hidden;
  z-index: 1001;
  isolation: isolate;  
  border-radius: 30px;
  background-color: var(--card-bg); /* For testing */
  border: 0.5px solid var(--text-secondary);
  box-shadow: var(--card-shadow);
  
  /* Curtain animation container */
  display: flex;
  transform-origin: center;
  animation: openCurtain 0.6s ease-out forwards;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
  }
}

.closeButton {
  position: absolute;
  top: 20px;
  right: 20px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.3);
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10;
  transition: background-color 0.2s ease;
  color: white;
  
  &:hover {
    background-color: rgba(0, 0, 0, 0.5);
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--accent-pink);
  }
}

.dialogContent {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}

.cardsContainer {
  width: 100%;
  height: 100%;
  position: relative;
}

.cardWrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform-origin: center center;
  
  &.active {
    pointer-events: auto; /* Enable pointer events for active card */
  }
}

.navigationButtons {
  display: flex;
  gap: 16px;
  justify-content: flex-start;
  align-items: center;
}

/* No animation classes needed */

@keyframes openCurtain {
  0% {
    transform: scaleX(0);
    opacity: 0;
  }
  100% {
    transform: scaleX(1);
    opacity: 1;
  }
}

.closing {
  animation: closeCurtain 0.6s ease-in forwards;
}

@keyframes closeCurtain {
  0% {
    transform: scaleX(1);
    opacity: 1;
  }
  100% {
    transform: scaleX(0);
    opacity: 0;
  }
}

/* Step indicator styles */
.stepIndicator {
  position: absolute;
  top: 20px;
  left: 40px;
  z-index: 10;
  font-size: 0.9rem;
  font-weight: 600;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  color: var(--text-color);
  opacity: 0.7;
}

/* Compact form fields with reduced gap */
.compactFormFields {
  display: flex;
  flex-direction: column;
  width: 100%;
  
  :global(.formGroup) {
    margin-bottom: 12px; /* Reduced gap between form fields */
  }
}

/* Bottom aligned buttons */
.bottomAlignedButtons {
  display: flex;
  flex-direction: column;
  gap: 10px;
  width: 100%;
  margin-top: auto; /* Push to bottom */
}

/* Button row styling */
.buttonRow {
  display: flex;
  flex-direction: row;
  gap: 12px;
  width: 60%;
  margin-top: auto; /* Push to bottom */
  position: absolute; /* Position at the bottom */
  // bottom: -20px; /* Distance from bottom */
  // left: 0;
  // right: 0;
  // padding: 0 20px; /* Add padding on sides */
}

/* Auth toggle styling */
.authToggle {
  margin-top: 16px;
  text-align: start;
  
  p {
    font-size: 0.9rem;
    color: var(--text-secondary);
  }
  
  button {
    background: none;
    border: none;
    color: var(--accent-pink);
    font-weight: 600;
    cursor: pointer;
    padding: 0;
    font-size: 0.9rem;
    
    &:hover {
      text-decoration: underline;
    }
  }
}