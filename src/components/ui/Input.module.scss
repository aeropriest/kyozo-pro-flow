@use '../../styles/themes/_theme-variables' as *;

.inputWrapper {
  margin-bottom: 1rem;
  width: 100%;
}

.label {
  display: block;
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--dark-text-color);
}

.required {
  color: var(--accent-pink);
  margin-left: 0.25rem;
}

.inputContainer {
  position: relative;
  width: 100%;
  box-sizing: border-box;
  
  &::before {
    content: '';
    position: absolute;
    top: -0.5px;
    left: -0.5px;
    right: -0.5px;
    bottom: -0.5px;
    background: transparent;
    border-radius: 9999px; /* Fully rounded */
    opacity: 0;
    transition: opacity 0.2s ease;
    z-index: 0;
    background-image: linear-gradient(90deg, var(--accent-pink), var(--accent-blue));
    background-origin: border-box;
    background-clip: border-box;
  }
}

.input {
  position: relative;
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  background-color: rgba(255, 255, 255, 0.05);
  color: var(--text-color);
  box-sizing: border-box;
  max-width: 100%;
  border: 0.5px solid rgba(255, 255, 255, 0.1); /* 0.5px border in normal state */
  border-radius: 9999px; /* Fully rounded */
  transition: all 0.2s ease;
  z-index: 1;
  
  &:focus {
    outline: none;
    // border-color: transparent;
    // background-image: linear-gradient(#181818, #181818), 
    // linear-gradient(90deg, var(--accent-pink), var(--accent-blue));

    & + .inputContainer::before {
      opacity: 1;
    }
  }
  
  &:focus-visible {
    outline: none;
  }
  
  &::placeholder {
    color: rgba(255, 255, 255, 0.5);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Focus state with gradient border
.inputContainer:focus-within::before {
  opacity: 1;
}

// Error state
.hasError {
  border-color: var(--accent-pink);
  
  &:focus {
    border-color: var(--accent-pink);
  }
}

.errorMessage {
  color: var(--accent-pink);
  font-size: 0.75rem;
  margin-top: 0.25rem;
  margin-left: 0.5rem;
}

