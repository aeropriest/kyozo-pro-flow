@use '../styles/themes/theme-variables' as *;

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  overflow: hidden;
  backdrop-filter: blur(10px);
}

.dialog {
  width: 90vw; /* Use 90% of viewport width */
  height: calc(100vh - 8rem);
  // max-width: 1800px; /* Increased max width */
  position: relative;
  overflow: hidden;
  z-index: 1001;
  isolation: isolate;  
  border-radius: 30px;
  background-color: var(--card-bg); /* For testing */
  border: 0.5px solid var(--text-secondary);
  box-shadow: var(--card-shadow);
  
  /* Curtain animation container */
  display: flex;
  transform-origin: center;
  animation: openCurtain 0.6s ease-out forwards;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
  }
}

.dialogLeft {
  width: 50%;
  height: 100%;
  overflow: hidden;
  position: relative;
  animation: openLeft 0.6s ease-out forwards;
}

.dialogRight {
  width: 50%;
  height: 100%;
  overflow: hidden;
  position: relative;
  animation: openRight 0.6s ease-out forwards;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding: 30px 40px;
  position: relative;
  z-index: 2;
}

.title {
  font-size: 2.5rem;
  font-weight: 700;
  margin: 0;
  color: var(--heading-color);
}

.subtitle {
  font-size: 0.9rem;
  font-weight: 600;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  margin: 0;
  color: var(--text-color);
  opacity: 0.7;
}

.closeButton {
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 5px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-color);
}

.closeIcon {
  font-size: 2rem;
  line-height: 1;
}

.dialogContent {
  display: flex;
  flex-direction: row;
  gap: 40px;
  align-items: flex-end;
  justify-content: space-between;
  height: calc(100% - 100px); /* Adjust for header height */
  
  // @media (max-width: 768px) {
  //   flex-direction: column-reverse;
  // }
}

.leftContent {
  // width: 500px;
  display: flex;
  flex-direction: column;
  text-align: left;
  gap: 10px;
  padding: 0 30px 30px 40px;
  height: 100%;
  
  // @media (max-width: 768px) {
  //   width: 100%;
  //   padding: 0 20px 20px;
  // }
}

.rightContent {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  position: relative;
  overflow: visible;
  height: 100%;
}

.tabs {
  display: flex;
  gap: 20px;
  margin-bottom: 20px;
}

.tab {
  background: transparent;
  border: none;
  padding: 10px 0;
  font-size: 1rem;
  font-weight: 500;
  color: var(--text-color);
  opacity: 0.7;
  cursor: pointer;
  position: relative;
  transition: opacity 0.3s;
  
  &:hover {
    opacity: 1;
  }
}

.activeTab {
  opacity: 1;
  font-weight: 600;
  
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: var(--accent-color);
  }
}

.tabCount {
  margin-left: 5px;
  font-size: 0.8rem;
  background-color: var(--accent-color);
  color: white;
  border-radius: 10px;
  padding: 2px 8px;
}

.content {
  flex: 1;
  overflow-y: auto;
}

/* Closing animation classes */
.closing {
  animation: closeCurtain 0.6s ease-in forwards;
}

.closingLeft {
  animation: closeLeft 0.6s ease-in forwards;
}

.closingRight {
  animation: closeRight 0.6s ease-in forwards;
}

/* Curtain animations */
@keyframes openCurtain {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes closeCurtain {
  0% {
    transform: scaleX(1);
  }
  100% {
    transform: scaleX(0);
  }
}

@keyframes openLeft {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes openRight {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes closeLeft {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes closeRight {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100%);
  }
}