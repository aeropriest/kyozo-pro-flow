// Color Variables for Kyozo Flow Pro
// Based on Kyozo website color palette
@use 'sass:map';
@use 'sass:color';
@use 'sass:meta';

// Primary Colors
$colors-primary: (
  'black': #000000,
  'white': #ffffff,
  'dark-gray': #181818,  // Background color
  'gray': #4d4d4d,      // Medium gray
  'light-gray': #3B3B3B,
  'accent-pink': #D3439A, // Pink accent color from waitlist button
  'accent-blue': #4169e1, // Royal blue accent
  'accent-light-blue': #5fb4ff, // Light blue accent
  'accent-yellow': #ffbf00, // Amber/yellow accent
  'accent-bright-yellow': #ffff00, // Bright yellow
  'accent-purple': #b19cd9, // Lavender/purple accent
  'accent-light-purple': #d8b4fe, // Light purple
  'accent-mint': #86efac, // Mint green
  'accent-coral': #ff8a65, // Coral/salmon
  'accent-gold': #ffd700, // Gold
  'accent-mauve': #c39797, // Mauve/dusty rose
  
  // Semantic colors
  'success': #4caf50, // Success green
  'warning': #ff9800, // Warning orange
  'error': #f44336,   // Error red
  'info': #2196f3,    // Info blue
);

// UI Colors
$colors-ui: (
  'background': map.get($colors-primary, 'dark-gray'),
  'background-light': map.get($colors-primary, 'white'),
  'foreground': map.get($colors-primary, 'white'),
  'foreground-light': map.get($colors-primary, 'dark-gray'),
  'border': rgba(255, 255, 255, 0.1),
  'border-light': rgba(0, 0, 0, 0.1),
  'overlay': rgba(0, 0, 0, 0.5),
  'overlay-light': rgba(255, 255, 255, 0.5),
);

// Semantic Colors
$colors-semantic: (
  'success': #4caf50,
  'warning': #ff9800,
  'error': #f44336,
  'info': #2196f3,
);

// Gradient Colors
$colors-gradients: (
  'primary': linear-gradient(135deg, map.get($colors-primary, 'accent-pink') 0%, map.get($colors-primary, 'accent-purple') 100%),
  'dark': linear-gradient(135deg, map.get($colors-primary, 'black') 0%, map.get($colors-primary, 'dark-gray') 100%),
  'light': linear-gradient(135deg, map.get($colors-primary, 'white') 0%, map.get($colors-primary, 'light-gray') 100%),
);

// Function to get a color with opacity
@function color-with-opacity($color, $opacity) {
  @return rgba($color, $opacity);
}

// Reusable gradient mixins
@mixin gradient-sunset {
  background: linear-gradient(135deg, #f59e0b 0%, #ef4444 50%, #7e22ce 100%);
}

@mixin gradient-ocean {
  background: linear-gradient(135deg, #0ea5e9 0%, #2563eb 50%, #1e3a8a 100%);
}

@mixin gradient-emerald-teal {
  background: linear-gradient(135deg, #10b981 0%, #0d9488 100%);
}

@mixin gradient-blue-purple {
  background: linear-gradient(135deg, #1e40af 0%, #7e22ce 100%);
}

@mixin gradient-pulse {
  background: linear-gradient(135deg, #ec4899 0%, #8b5cf6 50%, #3b82f6 100%);
  background-size: 200% 200%;
  animation: pulse-gradient 3s ease infinite;
}

@mixin gradient-dark-gold-circle {
  background: radial-gradient(
    circle at center,
    rgba(255, 215, 0, 0.8) 10%,
    rgba(0, 0, 0, 0.9) 60%
  );
}

@mixin gradient-aurora {
  background: radial-gradient(circle at center, #86efac 0%, #5fb4ff 40%, #d8b4fe 100%);
}

@mixin gradient-kyozo-background {
  position: relative;
  background-color: transparent;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200%;
    height: 200%;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    background: transparent;
    background-image: 
      conic-gradient(
        from 0deg,
        #7b3b78,
        #2b4b8f,
        #e78b76,
        #7b3b78
      );
    -webkit-mask: 
      radial-gradient(circle at center, 
        transparent 0%, 
        transparent 22%, 
        rgba(0, 0, 0, 0.3) 24%,
        rgba(0, 0, 0, 1) 28%, 
        rgba(0, 0, 0, 1) 32%,
        rgba(0, 0, 0, 0.3) 36%,
        transparent 38%
      );
    mask: 
      radial-gradient(circle at center, 
        transparent 0%, 
        transparent 22%, 
        rgba(0, 0, 0, 0.3) 24%,
        rgba(0, 0, 0, 1) 28%, 
        rgba(0, 0, 0, 1) 32%,
        rgba(0, 0, 0, 0.3) 36%,
        transparent 38%
      );
    filter: blur(5px);
    animation: expandRing 4s infinite;
  }
}

@keyframes expandRing {
  0% {
    width: 50%;
    height: 50%;
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    width: 200%;
    height: 200%;
    opacity: 0;
  }
}

@keyframes pulse-gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

// Helper function to access colors
@function color($category, $name) {
  @if $category == 'primary' {
    @return map-get($colors-primary, $name);
  } @else if $category == 'ui' {
    @return map-get($colors-ui, $name);
  } @else if $category == 'semantic' {
    @return map-get($colors-semantic, $name);
  } @else if $category == 'gradient' {
    @return map-get($colors-gradients, $name);
  } @else {
    @error "Unknown color category: #{$category}";
    @return null;
  }
}

// Theme color maps for light and dark modes
$theme-light: (
  'background': map-get($colors-primary, 'white'),
  'foreground': map-get($colors-primary, 'dark-gray'),
  'border': rgba(0, 0, 0, 0.1),
  'muted': rgba(0, 0, 0, 0.6),
  'accent': map-get($colors-primary, 'accent-blue'),
);

$theme-dark: (
  'background': map-get($colors-primary, 'dark-gray'),
  'foreground': map-get($colors-primary, 'white'),
  'border': rgba(255, 255, 255, 0.1),
  'muted': rgba(255, 255, 255, 0.6),
  'accent': map-get($colors-primary, 'accent-pink'),
);

// Helper function to get theme color
@function theme-color($theme, $key) {
  @if $theme == 'light' {
    @return map-get($theme-light, $key);
  } @else if $theme == 'dark' {
    @return map-get($theme-dark, $key);
  } @else {
    @error "Unknown theme: #{$theme}";
    @return null;
  }
}
