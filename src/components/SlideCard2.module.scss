@use '../styles/colors' as *;
@use 'sass:map';

.cardContainer {
  width: calc(100% - 80px); /* Account for left and right margins */
  height: calc(100vh - 160px); /* Account for top and bottom margins */
  margin: 20px 40px;
  background: map.get($colors-primary, 'dark-gray');
  padding: 10px;
  box-shadow: 0 8px 32px rgba(map.get($colors-primary, 'black'), 0.2);
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* Top align all content */
  position: relative;
  overflow: hidden;
  border-radius: 30px;
  backdrop-filter: blur(10px);
  border: 0.5px solid map.get($colors-primary, 'gray');  
}

.cardContent {
  display: flex;
  flex-direction: row;
  align-items: flex-start; /* Top align items horizontally */
  justify-content: space-between;
  margin-top: 0; /* Don't push content to bottom */
  
  @media (max-width: 768px) {
    flex-direction: column-reverse;
  }
}

.leftContent {
  width: 50%;
  display: flex;
  flex-direction: column;
  text-align: left;
  gap: 10px;
  padding: 30px 0 0 30px; /* Reduced top padding */
  margin-bottom: 20px;
  justify-content: flex-start; /* Top align content */
  height: 100%; /* Take full height of parent */
}

.rightContent {
  width: 50%; /* Take remaining 50% of the card */
  display: flex;
  justify-content: flex-start; /* Left align content */
  align-items: flex-start;
  position: relative;
  overflow: visible;
  padding: 30px 0 0 30px; /* Add padding to left-align content */
}

.categoryLabel {
  font-size: 1rem;
  font-weight: 300;
  letter-spacing: 0.1em;
  color: map.get($colors-primary, 'lighter-gray');
  margin: 0 0 8px 0;
}

.cardTitle {
  font-size: 4.8rem;
  font-weight: 700;
  margin: 0;
  -webkit-background-clip: text;
  background-clip: text;
  color: map.get($colors-primary, 'white');
  line-height: 1.0; /* Reduced line height to bring lines closer together */
}

.cardDescription {
  font-size: 1rem;
  line-height: 1.6;
  color: map.get($colors-primary, 'white');
  margin: 0;
  padding-top: 30px;
  padding-bottom: 30px;
  width: 65%;
}

.customButtonContainer {
  margin-top: 10px;
}

.customButton {
  display: inline-block;
  background: linear-gradient(90deg, map.get($colors-primary, 'accent-purple'), map.get($colors-primary, 'accent-blue'));
  border: none;
  border-radius: 30px;
  padding: 14px 32px;
  color: white;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-decoration: none;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(map.get($colors-primary, 'black'), 0.2);
  }
}

.phoneContainer {
  position: relative;
  width: 420px; /* Increased by 20% from 350px */
  height: 640px; /* Reduced by 20px from bottom */
  z-index: 2;
  margin-bottom: -30px; /* Adjusted for vertical clipping */
  margin-left: -100px; /* Move phone closer to text */
  overflow: hidden; /* Hide the overflow to show only half */
  display: flex;
  justify-content: flex-start; /* Align content to the left */
}

.phoneImage {
  object-fit: cover;
  object-position: left top;
  width: 420px; /* Increased by 20% from 350px */
  height: 660px; /* Increased by 20% from 550px */
  margin-bottom: -30px; /* Push bottom half outside the container */
}

.backgroundGradient {
  position: absolute;
  bottom: 200px; /* Move higher up */
  right: 25%; /* Move more to the left */
  width: 500px;
  height: 500px;
  z-index: 1;
  pointer-events: none;
}

.backgroundGlow {
  position: absolute;
  width: 600px;
  height: 600px;
  top: 60%; /* Move higher up */
  right: 30%; /* Move more to the left */
  transform: translateY(-50%);
  z-index: -1;
}
